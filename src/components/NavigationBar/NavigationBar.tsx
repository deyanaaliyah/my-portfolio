import { Link } from "react-router-dom";
import { useEffect, useState } from "react";
import "./Navigation.scss";
import { useLocalizedItems } from "../../hooks/translation";
import type { INavigationItem } from "../../interfaces";
import { Preset, Modal, Button } from "../";
import { useTranslation } from "react-i18next";

export const NavigationBar = () => {
  const [isMenuVisible, setMenu] = useState(false);
  const [isModalVisible, setModal] = useState(false);
  const [isBouncing, setIsBouncing] = useState(false);
  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);
  const navItems = useLocalizedItems<INavigationItem>("navigation");
  const { t } = useTranslation();

  useEffect(() => {
    const handleResize = () => {
      setIsMobile(window.innerWidth <= 768);
    };
    window.addEventListener("resize", handleResize);
    if (isMobile) {
    }
    return () => window.removeEventListener("resize", handleResize);
  }, []);

  const handleMenu = () => {
    if (isMobile) {
      setMenu((prev) => !prev);
      setIsBouncing(true);
      setTimeout(() => setIsBouncing(false), 400);
    }
  };

  return (
    <>
      <div
        className={`NavigationBar ${isBouncing ? "bounce" : ""}`}
        onClick={handleMenu}
      >
        <div className="NavigationBar__logo">
          <Link to="/">
            <svg
              width="95"
              height="23"
              viewBox="0 0 95 23"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M4.4 17.352C1.606 17.352 0.44 13.986 0.44 10.884C0.44 8.178 1.782 5.648 3.938 5.648C5.28 5.648 5.94 6.198 6.578 6.946C6.71 7.122 6.842 7.078 6.842 6.88V4.922C6.842 3.712 6.732 3.206 6.402 2.81C6.138 2.502 5.808 2.238 5.764 1.732C5.698 1.16 6.05 0.785999 6.864 0.72L7.238 0.675999L9.262 0.499999C9.834 0.455999 10.142 0.742 10.142 1.314V13.15C10.142 14.36 10.472 14.888 10.758 15.306C11 15.636 11.308 15.922 11.308 16.428C11.308 17.022 10.934 17.352 10.12 17.352H7.722C7.15 17.352 6.842 17.044 6.842 16.472V16.406C6.842 16.318 6.754 16.274 6.666 16.384C6.424 16.692 5.434 17.352 4.4 17.352ZM5.896 15.306C6.446 15.306 6.842 14.624 6.842 13.392V10.136C6.842 8.618 5.94 7.43 5.236 7.43C4.224 7.43 3.74 9.08 3.74 10.862C3.74 13.392 4.29 15.306 5.896 15.306ZM16.9543 17.352C13.7643 17.352 11.7623 15.086 11.7623 11.5C11.7623 8.068 13.8083 5.648 16.9543 5.648C19.3303 5.648 21.1783 7.078 21.1783 8.948C21.1783 11.192 17.7683 11.962 15.7443 12.49C15.4143 12.578 15.1283 12.732 15.2383 13.304C15.4803 14.382 16.3163 15.152 17.2623 15.152C18.3843 15.152 19.3743 14.492 19.9683 13.216C20.2323 12.644 20.7383 12.402 21.2883 12.622C21.7723 12.82 21.9043 13.37 21.6843 14.074C21.0023 16.362 18.8683 17.352 16.9543 17.352ZM15.8323 11.368C16.8883 10.972 18.2083 10.334 18.2083 9.102C18.2083 8.112 17.6803 7.408 16.9543 7.408C15.8543 7.408 15.0623 9.102 15.0623 10.906C15.0623 11.478 15.4803 11.5 15.8323 11.368ZM28.3743 22.808C25.5363 22.808 23.6443 21.202 23.6443 19.178C23.6443 18.056 24.3703 17.462 25.1403 17.462C27.4723 17.462 26.8563 21.048 28.6383 21.048C29.2983 21.048 29.6943 20.454 29.6943 19.354V16.098C29.6943 16.01 29.5843 16.01 29.5623 16.032C29.1223 16.494 28.2203 17.352 26.8123 17.352C24.7663 17.352 23.7543 15.856 23.7543 13.722V10.422C23.7543 9.212 23.6443 8.706 23.3143 8.31C23.0503 8.002 22.7203 7.738 22.6763 7.232C22.6103 6.66 22.9623 6.286 23.7763 6.22L24.1503 6.176L26.1743 6C26.7463 5.956 27.0543 6.242 27.0543 6.814V13.458C27.0543 14.756 27.5383 15.592 28.3743 15.592C29.0783 15.592 29.6943 14.866 29.6943 13.634V10.422C29.6943 9.212 29.5843 8.706 29.2543 8.31C28.9903 8.002 28.6603 7.738 28.6163 7.232C28.5503 6.66 28.9023 6.286 29.7163 6.22L30.0903 6.176L32.1143 6C32.6863 5.956 32.9943 6.242 32.9943 6.814V18.32C32.9943 21.84 30.5523 22.808 28.3743 22.808ZM37.1374 17.352C36.1474 17.352 34.4094 16.89 34.4094 14.624C34.4094 13.084 35.4654 12.006 36.9614 11.214C38.7434 10.268 40.1514 9.806 40.1514 9.212C40.1514 7.804 39.5354 7.408 38.8094 7.408C38.4794 7.408 37.9294 7.628 37.7094 8.486C37.4234 9.564 37.0494 10.092 36.1034 10.092C35.2674 10.092 34.6514 9.586 34.6514 8.486C34.6514 6.99 36.5654 5.648 38.9194 5.648C42.7254 5.648 43.4514 7.804 43.4514 9.476V12.798C43.4514 14.008 43.7814 14.536 44.0674 14.954C44.3094 15.284 44.6174 15.57 44.6174 16.076C44.6174 16.67 44.2434 17 43.4294 17H42.1314C41.2514 17 40.6134 16.648 40.3274 16.01C40.3054 15.922 40.1954 15.966 40.1954 15.966C39.4914 16.67 38.7214 17.352 37.1374 17.352ZM38.6774 15.702C39.7774 15.702 40.1514 14.624 40.1514 13.568V11.038C40.1514 10.95 40.1074 10.906 40.0634 10.95C39.0294 11.588 37.7094 12.71 37.7094 14.426C37.7094 15.196 38.0174 15.702 38.6774 15.702ZM46.6807 17C45.8667 17 45.4927 16.67 45.4927 16.076C45.4927 15.57 45.8007 15.284 46.0427 14.954C46.3287 14.536 46.6587 14.008 46.6587 12.798V10.422C46.6587 9.212 46.5487 8.706 46.2187 8.31C45.9547 8.002 45.6247 7.738 45.5807 7.232C45.5147 6.66 45.8667 6.286 46.6807 6.22L47.0547 6.176L49.0787 6C49.6507 5.956 49.9587 6.242 49.9587 6.814V6.902C49.9587 6.99 50.0247 7.034 50.0907 6.968C50.5307 6.506 51.4327 5.648 52.8407 5.648C54.8867 5.648 55.8987 7.144 55.8987 9.278V12.798C55.8987 14.008 56.2287 14.536 56.5147 14.954C56.7567 15.284 57.0647 15.57 57.0647 16.076C57.0647 16.67 56.6907 17 55.8767 17H52.6207C51.8067 17 51.4327 16.67 51.4327 16.076C51.4327 15.57 51.7407 15.284 51.9827 14.954C52.2687 14.536 52.5987 14.008 52.5987 12.798V9.542C52.5987 8.244 52.1147 7.408 51.2787 7.408C50.5747 7.408 49.9587 8.134 49.9587 9.366V12.798C49.9587 14.008 50.2887 14.536 50.5747 14.954C50.8167 15.284 51.1247 15.57 51.1247 16.076C51.1247 16.67 50.7507 17 49.9367 17H46.6807ZM59.3837 17.352C58.3717 17.352 57.7337 16.714 57.7337 15.702C57.7337 14.69 58.3717 14.052 59.3837 14.052C60.3957 14.052 61.0337 14.69 61.0337 15.702C61.0337 16.714 60.3957 17.352 59.3837 17.352ZM65.652 17.352C62.858 17.352 61.692 13.986 61.692 10.884C61.692 8.178 63.034 5.648 65.19 5.648C66.532 5.648 67.192 6.198 67.83 6.946C67.962 7.122 68.094 7.078 68.094 6.88V4.922C68.094 3.712 67.984 3.206 67.654 2.81C67.39 2.502 67.06 2.238 67.016 1.732C66.95 1.16 67.302 0.785999 68.116 0.72L68.49 0.675999L70.514 0.499999C71.086 0.455999 71.394 0.742 71.394 1.314V13.15C71.394 14.36 71.724 14.888 72.01 15.306C72.252 15.636 72.56 15.922 72.56 16.428C72.56 17.022 72.186 17.352 71.372 17.352H68.974C68.402 17.352 68.094 17.044 68.094 16.472V16.406C68.094 16.318 68.006 16.274 67.918 16.384C67.676 16.692 66.686 17.352 65.652 17.352ZM67.148 15.306C67.698 15.306 68.094 14.624 68.094 13.392V10.136C68.094 8.618 67.192 7.43 66.488 7.43C65.476 7.43 64.992 9.08 64.992 10.862C64.992 13.392 65.542 15.306 67.148 15.306ZM78.2062 17.352C75.0162 17.352 73.0142 15.086 73.0142 11.5C73.0142 8.068 75.0602 5.648 78.2062 5.648C80.5822 5.648 82.4302 7.078 82.4302 8.948C82.4302 11.192 79.0202 11.962 76.9962 12.49C76.6662 12.578 76.3802 12.732 76.4902 13.304C76.7322 14.382 77.5682 15.152 78.5142 15.152C79.6362 15.152 80.6262 14.492 81.2202 13.216C81.4842 12.644 81.9902 12.402 82.5402 12.622C83.0242 12.82 83.1562 13.37 82.9362 14.074C82.2542 16.362 80.1202 17.352 78.2062 17.352ZM77.0842 11.368C78.1402 10.972 79.4602 10.334 79.4602 9.102C79.4602 8.112 78.9322 7.408 78.2062 7.408C77.1062 7.408 76.3142 9.102 76.3142 10.906C76.3142 11.478 76.7322 11.5 77.0842 11.368ZM88.8394 17.352C88.2674 17.352 87.8494 17.066 87.6514 16.538L85.1874 10.07C84.6594 8.662 83.4934 8.156 83.4934 6.924C83.4934 6.286 83.9774 6 84.8794 6H87.4974C88.7074 6 89.2794 6.462 89.2794 7.188C89.2794 8.288 88.0914 8.684 88.4874 9.762L89.3234 11.984C89.5214 12.512 89.7414 12.512 89.9394 11.984L90.7974 9.762C91.1494 8.838 89.9614 8.288 89.9614 7.188C89.9614 6.462 90.5114 6 91.7434 6H93.0634C94.0754 6 94.4054 6.352 94.4054 6.946C94.4054 8.222 93.0194 8.706 92.4914 10.07L90.0274 16.538C89.8294 17.066 89.4114 17.352 88.8394 17.352Z"
                fill="var(--default)"
              />
            </svg>
          </Link>
        </div>

        {(!isMobile || isMenuVisible) && (
          <ul className="NavigationBar__ul">
            {navItems.map((item, index) => (
              <Link to={item.route} key={index}>
                <li className="NavigationBar__ul__li">{item.title}</li>
              </Link>
            ))}
          </ul>
        )}

        {(!isMobile || isMenuVisible) && (
          <Button
            title={t("preferences")}
            onClick={() => setModal(true)}
            color="primary"
            className={`NavigationBar__button ${
              isMenuVisible ? "NavigationBar__togglePreferencesBtn" : ""
            }`}
          />
        )}
      </div>

      {isModalVisible && (
        <Modal isOpen={isModalVisible} onClose={() => setModal(false)}>
          <Preset onClick={() => setModal(false)} />
        </Modal>
      )}
    </>
  );
};
